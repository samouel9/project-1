# -*- coding: utf-8 -*-
"""Copy of Практика 0.2.0 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PbtivYq6rd3HyC08-TYxuDDL9iZsD_0s

Напишите свое ФИО:
"""

print('хабиб самоуел ')

print('Привет студентам!')

"""# Основы

Задание 1: Напиши программу, выводящую на экран сообщение "Привет, мир!"
"""

print("Привет, мир!")

"""Задание 2: Напиши программу которая запрашивает имя пользователя и выводит сообщение:

`Привет, <Имя пользователя>`
"""

name = input("Введите ваше имя: ")
print("Привет,", name)

"""Задание 3: Напиши программу определяющую является ли число четным или нечетным:

Пример:

`Введите число:` 2

`Ваше число четное!`
"""

num = int(input("Ввадите число: "))
if num % 2 == 0:
  print("Ваше число четное!")
else:
  print("Ваше число нечетное!")

"""Задание 4: Напишите программу которая запрашивает длинну и ширину прямоугольника и выводит его площадь:



`Введите длинну прямоугольника:`

`Введите ширину прямоугольника:`

`Площадь прямоугольника: `


"""

length = float(input("Введите длинну прямоугольника: "))
width = float(input("Введите ширину прямоугольника: "))
print(f"Площадь прямоугольника: {length * width }" )

"""Задание 5: Напишите программу, которая будет вычислять среднее арифметическое введенных чисел"""

num1 = float(input("Введите первое число: "))
num2 = float(input("Введите второе число: "))
print(f"Среднее арифметическое: {(num1 + num2) / 2}")

"""Задание 6: Напишите программу, которая бы определяла является ли год високосным
Пример:

`Введите год:` 2024

`Ваш год високосный!`
"""

old = int(input("Введите год: "))
if old % 4==0:
  print("Ваш год високосный!")
else:
  print("Ваш год невисокосный!")

"""Задание 7: Необходимо создать простой калькулятор, который позволяет пользователю выбрать одну из четырёх операций (+, -, *, /), ввести два числа и получить результат выполнения операции.

`Введите операцию:`

`Введите первое число:`

`Введите второе число:`

`Результат выполнения: `

"""

oper = input("Выберите операцию:( + , - , * , / ) \n")
num1 = float(input("Введите первое число: "))
num2 = float(input("Введите второе число: "))
if oper == "+":
  print(f"Результат выполнения: {num1 + num2}")
elif oper == "-":
  print(f"Результат выполнения: {num1 - num2}")
elif oper == "/":
  print(f"Результат выполнения: {num1 / num2}")
elif oper == "*":
  print(f"Результат выполнения: {num1 * num2}")
else:
  print("Ошибка ввода!")

"""# Практика 0.2.1

**Шахматы**

Даны стартовые и конечные координаты, а также фигура

Необходимо определить, может ли заданная фигура так ходить?
"""



"""# Практика 0.2.2

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции
"""



"""# Практика 0.2.3


Возьмите код из задания 7 и улучшите ваш калькулятор следующим образом:

Пользователь вводит строку вида:

(5+5)*5 - данная строка содержит в себе математическое выражение, а также скобки

Ваша программа должная понять что за математическое выражение записано, проверить верно ли оно записано (пример неверного заполнения: (5(+)5)*5, а также расчитать его в соотвествии с правилами математики
"""

print(eval(input("Введите выражение: ")))

def tokenize(expression):
  tokens = []
  current_number = []
  for char in expression:
      if char.isdigit() or char == '.':
          current_number.append(char)
      else:
          if current_number:
              tokens.append(''.join(current_number))
              current_number = []
          if char in "+-*/()":
              tokens.append(char)
  if current_number:
      tokens.append(''.join(current_number))
  return tokens

def precedence(op):
  if op in ('+', '-'):
      return 1
  if op in ('*', '/'):
      return 2
  return 0

def apply_operator(operators, values):
  right = values.pop()
  left = values.pop()
  op = operators.pop()
  if op == '+':
      values.append(left + right)
  elif op == '-':
      values.append(left - right)
  elif op == '*':
      values.append(left * right)
  elif op == '/':
      values.append(left / right)

def evaluate_expression(expression):
  tokens = tokenize(expression)
  values = []
  operators = []
  i = 0
  while i < len(tokens):
      token = tokens[i]
      if token.isdigit() or '.' in token:
          values.append(float(token))
      elif token == '(':
          operators.append(token)
      elif token == ')':
          while operators and operators[-1] != '(':
              apply_operator(operators, values)
          operators.pop()
      else:
          while (operators and precedence(operators[-1]) >= precedence(token)):
              apply_operator(operators, values)
          operators.append(token)
      i += 1

  while operators:
      apply_operator(operators, values)

  return values[0]


expression = input("Введите математическое выражение: ")
try:
  result = evaluate_expression(expression)
  print(f"Результат выполнения: {result}")
except Exception as e:
  print(f"Ошибка в выражении: {e}")