# -*- coding: utf-8 -*-
"""Copy of Практика 0.6.0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x8C-DLZ2Q4m6AOf_l6bCuiLhIlSIf31f

---

# **Дисклеймер**

В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики

---

# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```
"""

list_input = input().split()

result = []

for item in list_input:
  if item not in result :
    result.append(item)

print(" ".join(result))

"""# Задание 2

**Задача:**

Написать функцию для нахождения простых чисел в диапазоне

Ввод:

```
10, 50
```

Вывод:

```
11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47
```
"""

list_input =input().split(', ')
start =int(list_input[0])
end = int(list_input[1])
primes =[]

for num in range(start, end + 1):
  is_prime=True
  if num < 2:
    is_prime=False
  else:
    for i in range(2, int(num ** 0.5) + 1):
      if num % i == 0:
        is_prime = False
        break
  if is_prime:
    primes.append(num)

print(", ".join(map(str, primes)))

"""# Задание 3

Напишите функцию для объединения двух списков (список ключей и список значении) в словарь

*Запрещено:*

*   Использования готовых функции для объединения списков (пример: zip() )

Дано:

```
keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
```

Вывод:
```
{'a': 1, 'b': 2, 'c': 3, 'e': 4}
```



"""

keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
result = {}
for i in range(len(keys)):
  result[keys[i]]= values[i]

print(result)

"""# Задание 4

Напишите функцию(ии) для подсчета статистических параметров:
*   Сумму
*   Среднее арифметическое
*   Медиану
*   Моду


*Запрещено:*

*   sum()
*   sorted()
*   и других функции предоставляющих готовое решение задания

Дано:

```
numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

```

Вывод:
```
{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}
```

"""

numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]
total_sum =0
for number in numbers :
  total_sum += number
count= 0
for _ in numbers :
  count += 1
mean = total_sum / count if count > 0 else 0
s_numbers = numbers.copy()
for i in range(count):
  for j in range(0, count - i - 1 ):
    if s_numbers[j] > s_numbers[j + 1]:
        s_numbers[j], s_numbers[j + 1] = s_numbers[j + 1], s_numbers[j]
if count % 2 == 0 :
  median = (s_numbers [count // 2 - 1]+ s_numbers [count // 2]) / 2
else:
    median = s_numbers[count//2]
frequency = {}
for num in  numbers :
  if num in frequency :
    frequency[num] += 1
  else:
      frequency[num]= 1
max_frequency = 0
mode = None
for num, freq in frequency.items():
    if freq > max_frequency:
        max_frequency = freq
        mode = num
result = {
    'mean': mean,
    'median': median,
    'mode': mode,
    'sum': total_sum
}
print (result)

"""# Задание 5

На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.

*Запрещено:*

*   len()

Дано:

```
Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.

```

Вывод:
```
Самое длинное слово с номером 5: обязательны
```
"""

text = "Страдание и боль всегда обязательны для широкого сознания и глубокого сердца."
words = text.split()
longest_word = ""
longest_index = 0
max_length = 0

for index, word in enumerate(words):
    length = 0
    for char in word:
        length += 1
    if length > max_length:
        max_length = length
        longest_word = word
        longest_index = index + 1
print(f"Самое длинное слово с номером {longest_index}: {longest_word}")

"""# Задание 6

Напишите программу, для управления оценками студентов, со следующими функциями:

* Добавление информации о студенте и его оценках.
* Подсчет среднего балла студента.
* Получение списка всех студентов с их средними баллами.
* Поиск студента по имени и вывод его оценок и среднего балла.




"""

students = {}

while True:
    print("\nМеню:")
    print("1. Добавить студента и его оценки")
    print("2. Получить список всех студентов с их средними баллами")
    print("3. Найти студента по имени")
    print("4. Выход")

    choice = input("Выберите действие (1-4): ")

    if choice == '1':
        name = input("Введите имя студента: ")
        grades_input = input("Введите оценки через запятую: ")
        grades = list(map(int, grades_input.split(',')))
        students[name] = grades
        print(f"Студент {name} добавлен с оценками: {grades}.")

    elif choice == '2':
        print("Список студентов с их средними баллами:")
        for name, grades in students.items():
            average = sum(grades) / len(grades) if grades else 0
            print(f"{name}: {average:.2f}")

    elif choice == '3':
        name = input("Введите имя студента для поиска: ")
        if name in students:
            grades = students[name]
            average = sum(grades) / len(grades) if grades else 0
            print(f"Оценки студента {name}: {grades}, Средний балл: {average:.2f}")
        else:
            print(f"Студент {name} не найден.")

    elif choice == '4':
        print("Выход из программы.")
        break

    else:
        print("Неверный выбор. Пожалуйста, попробуйте снова.")

"""# Задание 7


**Задача:**

Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.

Ключевые особенности:

*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос
*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.
*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.
*  Реализуйте функцию добавления нового вопроса
*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса

"""

